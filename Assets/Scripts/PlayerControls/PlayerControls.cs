//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/PlayerControls/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace WK
{
    public partial class @PlayerControls: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""PC"",
            ""id"": ""89b5dcb4-e733-4c78-93d7-314592468b03"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""14afb303-bd2c-4136-8cfe-f9b5a75778f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9449d38d-03b1-4d6f-ba85-ebbdc7e2cac1"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ActionGameControls"",
            ""id"": ""f10072ac-b108-4487-8693-b95ef05fcbc4"",
            ""actions"": [
                {
                    ""name"": ""MovementDirection"",
                    ""type"": ""Value"",
                    ""id"": ""2efdcb4d-7038-45fa-b217-3810f074c837"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AimMode"",
                    ""type"": ""Button"",
                    ""id"": ""232e3672-ee7e-4a0c-a313-8c963c999234"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryAction"",
                    ""type"": ""Button"",
                    ""id"": ""ec4f7efb-e309-4965-9bb1-4aa44b61f795"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextUnit"",
                    ""type"": ""Button"",
                    ""id"": ""c0ceb455-3050-4f4a-969d-bc05e3001872"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimPosition"",
                    ""type"": ""Value"",
                    ""id"": ""7013fe94-621c-4286-a090-b7853066a4ef"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AimMovement"",
                    ""type"": ""Value"",
                    ""id"": ""0fce6c39-3778-4bcd-aac2-ebdfab8f9562"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ActivateAction"",
                    ""type"": ""Button"",
                    ""id"": ""af5e2206-2bde-4c16-9b46-1d98069ead81"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""96c4f9b9-d2da-45cc-971a-c8cc388b3cf3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementDirection"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""22515560-e3e8-4b8f-ad13-12b69bbcc421"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""e2927832-ef9f-4d9a-9e0b-f9f9ee10cbd7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""e4ffd811-a66f-49c5-8efc-550c75557fcf"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""8c9046d8-fdba-4edb-9578-94bf6369defd"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""3535fa39-4b5a-415e-acf7-e9d7d0fa4d9a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementDirection"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""1f853a96-2624-4c3b-ad31-795a86db3511"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""37fa8260-da18-4760-9365-caad7a208ee8"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""1a2e88fa-1783-4c16-9578-3025f048ee51"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""358eecbc-6693-4102-adb1-7d383c920e30"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""dcf5e24e-34ee-48a4-8d5f-ba9898b0f06e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementDirection"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""44f4d355-87bb-4d69-a2f9-548a11a547ef"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""61e5be59-347c-4a8b-8ded-74f69ed7ed67"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""f022ea4c-84e7-49fe-beed-fe045f1b2659"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""ef049e4f-7fa1-4a74-b04f-0bacf2486595"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bdc02a3f-5b1e-4237-a65c-22026fea402c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c88cb93d-d5ef-406a-8191-4b6173525805"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3c109d8-ba15-425e-9513-f35df97efc56"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c78e0cae-fce1-47e4-903f-28f2f8d5bfca"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7f75aaf-f083-4472-a567-89aa140afaef"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextUnit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6580574-43cb-44c0-aa26-04911082c808"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextUnit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa365061-8584-4776-aafd-d399ad1fc87b"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""3e3ab609-863f-4fde-a7d6-aec32e8c8b4a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f8366b9b-8127-49ac-b3c2-e8710db42f03"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""dc91e749-af74-4513-af26-9c5b352a7b0a"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c807c02c-485c-432c-a36e-76b1d1c0b2db"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5cca2087-db98-415f-91c3-a06cdd4868ad"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b6420dbb-7039-4dd2-9fa1-f954bd54c74b"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActivateAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10d538a7-ba6d-4aeb-99f5-d783d2ef7bed"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActivateAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MobaGameControls"",
            ""id"": ""1355217d-0832-414f-9813-5c8c8407bf4d"",
            ""actions"": [
                {
                    ""name"": ""MoveCommand"",
                    ""type"": ""Button"",
                    ""id"": ""8507f180-8029-4f36-a4fd-5258184616b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChamberFollower"",
                    ""type"": ""Button"",
                    ""id"": ""f35b5b63-b02c-4ba3-8a61-a5df5a413284"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimMode"",
                    ""type"": ""Button"",
                    ""id"": ""5110a179-8360-4fef-8e6a-92c28e30556d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimPosition"",
                    ""type"": ""Value"",
                    ""id"": ""95614133-097d-4c4b-b27d-6c1986f76dd8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ActivateAction"",
                    ""type"": ""Button"",
                    ""id"": ""4f60745a-34b9-4f3d-bb25-32262b66b10f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ecc45320-e55b-489e-b305-fdbe50d79293"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCommand"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6087c748-a55b-4ff7-a4cc-f1098c1f599a"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChamberFollower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14d5d9a1-d6bd-4f2d-a247-6dfda089f1c1"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e42c4c4b-c815-4d6f-a27d-2d2d164c2b20"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2d16ae3-8960-40cd-b87c-040de4ce908b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActivateAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // PC
            m_PC = asset.FindActionMap("PC", throwIfNotFound: true);
            m_PC_Move = m_PC.FindAction("Move", throwIfNotFound: true);
            // ActionGameControls
            m_ActionGameControls = asset.FindActionMap("ActionGameControls", throwIfNotFound: true);
            m_ActionGameControls_MovementDirection = m_ActionGameControls.FindAction("MovementDirection", throwIfNotFound: true);
            m_ActionGameControls_AimMode = m_ActionGameControls.FindAction("AimMode", throwIfNotFound: true);
            m_ActionGameControls_SecondaryAction = m_ActionGameControls.FindAction("SecondaryAction", throwIfNotFound: true);
            m_ActionGameControls_NextUnit = m_ActionGameControls.FindAction("NextUnit", throwIfNotFound: true);
            m_ActionGameControls_AimPosition = m_ActionGameControls.FindAction("AimPosition", throwIfNotFound: true);
            m_ActionGameControls_AimMovement = m_ActionGameControls.FindAction("AimMovement", throwIfNotFound: true);
            m_ActionGameControls_ActivateAction = m_ActionGameControls.FindAction("ActivateAction", throwIfNotFound: true);
            // MobaGameControls
            m_MobaGameControls = asset.FindActionMap("MobaGameControls", throwIfNotFound: true);
            m_MobaGameControls_MoveCommand = m_MobaGameControls.FindAction("MoveCommand", throwIfNotFound: true);
            m_MobaGameControls_ChamberFollower = m_MobaGameControls.FindAction("ChamberFollower", throwIfNotFound: true);
            m_MobaGameControls_AimMode = m_MobaGameControls.FindAction("AimMode", throwIfNotFound: true);
            m_MobaGameControls_AimPosition = m_MobaGameControls.FindAction("AimPosition", throwIfNotFound: true);
            m_MobaGameControls_ActivateAction = m_MobaGameControls.FindAction("ActivateAction", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // PC
        private readonly InputActionMap m_PC;
        private List<IPCActions> m_PCActionsCallbackInterfaces = new List<IPCActions>();
        private readonly InputAction m_PC_Move;
        public struct PCActions
        {
            private @PlayerControls m_Wrapper;
            public PCActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_PC_Move;
            public InputActionMap Get() { return m_Wrapper.m_PC; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PCActions set) { return set.Get(); }
            public void AddCallbacks(IPCActions instance)
            {
                if (instance == null || m_Wrapper.m_PCActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PCActionsCallbackInterfaces.Add(instance);
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
            }

            private void UnregisterCallbacks(IPCActions instance)
            {
                @Move.started -= instance.OnMove;
                @Move.performed -= instance.OnMove;
                @Move.canceled -= instance.OnMove;
            }

            public void RemoveCallbacks(IPCActions instance)
            {
                if (m_Wrapper.m_PCActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPCActions instance)
            {
                foreach (var item in m_Wrapper.m_PCActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PCActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public PCActions @PC => new PCActions(this);

        // ActionGameControls
        private readonly InputActionMap m_ActionGameControls;
        private List<IActionGameControlsActions> m_ActionGameControlsActionsCallbackInterfaces = new List<IActionGameControlsActions>();
        private readonly InputAction m_ActionGameControls_MovementDirection;
        private readonly InputAction m_ActionGameControls_AimMode;
        private readonly InputAction m_ActionGameControls_SecondaryAction;
        private readonly InputAction m_ActionGameControls_NextUnit;
        private readonly InputAction m_ActionGameControls_AimPosition;
        private readonly InputAction m_ActionGameControls_AimMovement;
        private readonly InputAction m_ActionGameControls_ActivateAction;
        public struct ActionGameControlsActions
        {
            private @PlayerControls m_Wrapper;
            public ActionGameControlsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @MovementDirection => m_Wrapper.m_ActionGameControls_MovementDirection;
            public InputAction @AimMode => m_Wrapper.m_ActionGameControls_AimMode;
            public InputAction @SecondaryAction => m_Wrapper.m_ActionGameControls_SecondaryAction;
            public InputAction @NextUnit => m_Wrapper.m_ActionGameControls_NextUnit;
            public InputAction @AimPosition => m_Wrapper.m_ActionGameControls_AimPosition;
            public InputAction @AimMovement => m_Wrapper.m_ActionGameControls_AimMovement;
            public InputAction @ActivateAction => m_Wrapper.m_ActionGameControls_ActivateAction;
            public InputActionMap Get() { return m_Wrapper.m_ActionGameControls; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(ActionGameControlsActions set) { return set.Get(); }
            public void AddCallbacks(IActionGameControlsActions instance)
            {
                if (instance == null || m_Wrapper.m_ActionGameControlsActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_ActionGameControlsActionsCallbackInterfaces.Add(instance);
                @MovementDirection.started += instance.OnMovementDirection;
                @MovementDirection.performed += instance.OnMovementDirection;
                @MovementDirection.canceled += instance.OnMovementDirection;
                @AimMode.started += instance.OnAimMode;
                @AimMode.performed += instance.OnAimMode;
                @AimMode.canceled += instance.OnAimMode;
                @SecondaryAction.started += instance.OnSecondaryAction;
                @SecondaryAction.performed += instance.OnSecondaryAction;
                @SecondaryAction.canceled += instance.OnSecondaryAction;
                @NextUnit.started += instance.OnNextUnit;
                @NextUnit.performed += instance.OnNextUnit;
                @NextUnit.canceled += instance.OnNextUnit;
                @AimPosition.started += instance.OnAimPosition;
                @AimPosition.performed += instance.OnAimPosition;
                @AimPosition.canceled += instance.OnAimPosition;
                @AimMovement.started += instance.OnAimMovement;
                @AimMovement.performed += instance.OnAimMovement;
                @AimMovement.canceled += instance.OnAimMovement;
                @ActivateAction.started += instance.OnActivateAction;
                @ActivateAction.performed += instance.OnActivateAction;
                @ActivateAction.canceled += instance.OnActivateAction;
            }

            private void UnregisterCallbacks(IActionGameControlsActions instance)
            {
                @MovementDirection.started -= instance.OnMovementDirection;
                @MovementDirection.performed -= instance.OnMovementDirection;
                @MovementDirection.canceled -= instance.OnMovementDirection;
                @AimMode.started -= instance.OnAimMode;
                @AimMode.performed -= instance.OnAimMode;
                @AimMode.canceled -= instance.OnAimMode;
                @SecondaryAction.started -= instance.OnSecondaryAction;
                @SecondaryAction.performed -= instance.OnSecondaryAction;
                @SecondaryAction.canceled -= instance.OnSecondaryAction;
                @NextUnit.started -= instance.OnNextUnit;
                @NextUnit.performed -= instance.OnNextUnit;
                @NextUnit.canceled -= instance.OnNextUnit;
                @AimPosition.started -= instance.OnAimPosition;
                @AimPosition.performed -= instance.OnAimPosition;
                @AimPosition.canceled -= instance.OnAimPosition;
                @AimMovement.started -= instance.OnAimMovement;
                @AimMovement.performed -= instance.OnAimMovement;
                @AimMovement.canceled -= instance.OnAimMovement;
                @ActivateAction.started -= instance.OnActivateAction;
                @ActivateAction.performed -= instance.OnActivateAction;
                @ActivateAction.canceled -= instance.OnActivateAction;
            }

            public void RemoveCallbacks(IActionGameControlsActions instance)
            {
                if (m_Wrapper.m_ActionGameControlsActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IActionGameControlsActions instance)
            {
                foreach (var item in m_Wrapper.m_ActionGameControlsActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_ActionGameControlsActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public ActionGameControlsActions @ActionGameControls => new ActionGameControlsActions(this);

        // MobaGameControls
        private readonly InputActionMap m_MobaGameControls;
        private List<IMobaGameControlsActions> m_MobaGameControlsActionsCallbackInterfaces = new List<IMobaGameControlsActions>();
        private readonly InputAction m_MobaGameControls_MoveCommand;
        private readonly InputAction m_MobaGameControls_ChamberFollower;
        private readonly InputAction m_MobaGameControls_AimMode;
        private readonly InputAction m_MobaGameControls_AimPosition;
        private readonly InputAction m_MobaGameControls_ActivateAction;
        public struct MobaGameControlsActions
        {
            private @PlayerControls m_Wrapper;
            public MobaGameControlsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @MoveCommand => m_Wrapper.m_MobaGameControls_MoveCommand;
            public InputAction @ChamberFollower => m_Wrapper.m_MobaGameControls_ChamberFollower;
            public InputAction @AimMode => m_Wrapper.m_MobaGameControls_AimMode;
            public InputAction @AimPosition => m_Wrapper.m_MobaGameControls_AimPosition;
            public InputAction @ActivateAction => m_Wrapper.m_MobaGameControls_ActivateAction;
            public InputActionMap Get() { return m_Wrapper.m_MobaGameControls; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MobaGameControlsActions set) { return set.Get(); }
            public void AddCallbacks(IMobaGameControlsActions instance)
            {
                if (instance == null || m_Wrapper.m_MobaGameControlsActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_MobaGameControlsActionsCallbackInterfaces.Add(instance);
                @MoveCommand.started += instance.OnMoveCommand;
                @MoveCommand.performed += instance.OnMoveCommand;
                @MoveCommand.canceled += instance.OnMoveCommand;
                @ChamberFollower.started += instance.OnChamberFollower;
                @ChamberFollower.performed += instance.OnChamberFollower;
                @ChamberFollower.canceled += instance.OnChamberFollower;
                @AimMode.started += instance.OnAimMode;
                @AimMode.performed += instance.OnAimMode;
                @AimMode.canceled += instance.OnAimMode;
                @AimPosition.started += instance.OnAimPosition;
                @AimPosition.performed += instance.OnAimPosition;
                @AimPosition.canceled += instance.OnAimPosition;
                @ActivateAction.started += instance.OnActivateAction;
                @ActivateAction.performed += instance.OnActivateAction;
                @ActivateAction.canceled += instance.OnActivateAction;
            }

            private void UnregisterCallbacks(IMobaGameControlsActions instance)
            {
                @MoveCommand.started -= instance.OnMoveCommand;
                @MoveCommand.performed -= instance.OnMoveCommand;
                @MoveCommand.canceled -= instance.OnMoveCommand;
                @ChamberFollower.started -= instance.OnChamberFollower;
                @ChamberFollower.performed -= instance.OnChamberFollower;
                @ChamberFollower.canceled -= instance.OnChamberFollower;
                @AimMode.started -= instance.OnAimMode;
                @AimMode.performed -= instance.OnAimMode;
                @AimMode.canceled -= instance.OnAimMode;
                @AimPosition.started -= instance.OnAimPosition;
                @AimPosition.performed -= instance.OnAimPosition;
                @AimPosition.canceled -= instance.OnAimPosition;
                @ActivateAction.started -= instance.OnActivateAction;
                @ActivateAction.performed -= instance.OnActivateAction;
                @ActivateAction.canceled -= instance.OnActivateAction;
            }

            public void RemoveCallbacks(IMobaGameControlsActions instance)
            {
                if (m_Wrapper.m_MobaGameControlsActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IMobaGameControlsActions instance)
            {
                foreach (var item in m_Wrapper.m_MobaGameControlsActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_MobaGameControlsActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public MobaGameControlsActions @MobaGameControls => new MobaGameControlsActions(this);
        public interface IPCActions
        {
            void OnMove(InputAction.CallbackContext context);
        }
        public interface IActionGameControlsActions
        {
            void OnMovementDirection(InputAction.CallbackContext context);
            void OnAimMode(InputAction.CallbackContext context);
            void OnSecondaryAction(InputAction.CallbackContext context);
            void OnNextUnit(InputAction.CallbackContext context);
            void OnAimPosition(InputAction.CallbackContext context);
            void OnAimMovement(InputAction.CallbackContext context);
            void OnActivateAction(InputAction.CallbackContext context);
        }
        public interface IMobaGameControlsActions
        {
            void OnMoveCommand(InputAction.CallbackContext context);
            void OnChamberFollower(InputAction.CallbackContext context);
            void OnAimMode(InputAction.CallbackContext context);
            void OnAimPosition(InputAction.CallbackContext context);
            void OnActivateAction(InputAction.CallbackContext context);
        }
    }
}
